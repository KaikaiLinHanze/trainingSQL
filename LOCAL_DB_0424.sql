SELECT STORE_NAME,STORE_ID, SALES FROM STORE_INFORMATION;

SELECT * FROM STORE_INFORMATION;

SELECT DISTINCT STORE_NAME  FROM STORE_INFORMATION;

SELECT STORE_ID,STORE_NAME,STORE_ID, SALES 
FROM STORE_INFORMATION
WHERE SALES > 1000;


SELECT STORE_ID,STORE_NAME,STORE_ID, SALES 
FROM STORE_INFORMATION
WHERE SALES > 1000
OR SALES > 275 AND SALES < 500;


SELECT STORE_ID,STORE_NAME,STORE_ID, SALES 
FROM STORE_INFORMATION
WHERE STORE_ID = 2
OR STORE_ID = 3
OR STORE_ID = 5;

SELECT STORE_ID,STORE_NAME,STORE_ID, SALES 
FROM STORE_INFORMATION
WHERE STORE_ID IN(2,3,5);


SELECT STORE_ID,STORE_NAME,STORE_ID, SALES 
FROM STORE_INFORMATION
WHERE STORE_NAME = 'Los Angeles';

SELECT STORE_ID,STORE_NAME,STORE_ID, SALES 
FROM STORE_INFORMATION
WHERE　SALES >= 275 AND SALES <= 1500;

SELECT STORE_ID,STORE_NAME,STORE_ID, SALES 
FROM STORE_INFORMATION
WHERE　SALES BETWEEN 275 AND 1500;

SELECT STORE_ID,STORE_NAME,STORE_ID, SALES, STORE_DATE
FROM STORE_INFORMATION
WHERE　STORE_DATE BETWEEN '2018-03-01' AND '2018-05-31';

SELECT STORE_ID,STORE_NAME,STORE_ID, SALES 
FROM STORE_INFORMATION
WHERE　STORE_NAME LIKE 'Los%les';




-- 2, 4, 5
SELECT STORE_ID,STORE_NAME, STORE_DATE, SALES , GEOGRAPHY_ID
FROM STORE_INFORMATION
--1.「且」找出屬於西區的商店
WHERE GEOGRAPHY_ID = 2
--2.「且」營業額大於300(包含300)
AND SALES >= 300
--4.「或」營業日介於2018年3月至4月
OR STORE_DATE BETWEEN '2018-03-01' AND '2018-04-30'
--3.「且」商店名稱“L”開頭
AND STORE_NAME LIKE 'L%';
 

SELECT STORE_ID,STORE_NAME, STORE_DATE, SALES , GEOGRAPHY_ID
FROM STORE_INFORMATION
ORDER　BY SALES ASC;

SELECT STORE_ID,STORE_NAME, STORE_DATE, SALES , GEOGRAPHY_ID
FROM STORE_INFORMATION
ORDER　BY SALES DESC, STORE_DATE ASC;

SELECT SUM(SALES), COUNT(STORE_ID), AVG(SALES), MAX(SALES), MIN(SALES)
FROM STORE_INFORMATION;

SELECT * FROM STORE_INFORMATION
WHERE GEOGRAPHY_ID IS NOT NULL;

SELECT COUNT(*)
FROM STORE_INFORMATION
WHERE GEOGRAPHY_ID IS NULL;


SELECT COUNT(DISTINCT STORE_NAME)
FROM STORE_INFORMATION;

SELECT * FROM STORE_INFORMATION
ORDER BY STORE_NAME DESC;

SELECT STORE_NAME, SUM(SALES), COUNT(STORE_NAME), AVG(SALES),
MAX(SALES), MIN(SALES)
FROM STORE_INFORMATION
GROUP BY STORE_NAME;

SELECT STORE_NAME, COUNT(STORE_NAME), SUM(SALES),
LISTAGG(SALES, '/') WITHIN GROUP (ORDER BY SALES DESC)
FROM STORE_INFORMATION
GROUP BY STORE_NAME;

SELECT STORE_NAME "商店名稱", SUM(SALES) AS "加總營業額"
FROM STORE_INFORMATION
GROUP BY STORE_NAME
HAVING SUM(SALES) >= 3000;

-- S * 9
-- G * 3
SELECT STORE_ID, STORE_NAME, S.STORE_DATE, S.GEOGRAPHY_ID,
G.REGION_NAME
FROM STORE_INFORMATION S, GEOGRAPHY G
WHERE S.GEOGRAPHY_ID = G.GEOGRAPHY_ID;

SELECT G.GEOGRAPHY_ID,G.REGION_NAME,
STORE_ID, STORE_NAME, S.STORE_DATE, S.GEOGRAPHY_ID
FROM GEOGRAPHY G INNER JOIN STORE_INFORMATION S 
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;


SELECT G.GEOGRAPHY_ID,G.REGION_NAME,
STORE_ID, STORE_NAME, S.STORE_DATE, S.GEOGRAPHY_ID
FROM GEOGRAPHY G LEFT JOIN STORE_INFORMATION S 
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;

SELECT G.GEOGRAPHY_ID,G.REGION_NAME,
STORE_ID, STORE_NAME, S.STORE_DATE, S.GEOGRAPHY_ID
FROM STORE_INFORMATION S  LEFT JOIN  GEOGRAPHY G
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;

SELECT G.GEOGRAPHY_ID,G.REGION_NAME,
STORE_ID, STORE_NAME, S.STORE_DATE, S.GEOGRAPHY_ID
FROM GEOGRAPHY G RIGHT JOIN STORE_INFORMATION S 
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;