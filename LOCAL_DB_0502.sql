SELECT STORE_NAME, SUM(SALES) AS "SUM_SALES"
FROM STORE_INFORMATION
GROUP BY STORE_NAME
HAVING SUM(SALES) > 3000;


SELECT S.STORE_NAME
FROM STORE_INFORMATION S;

SELECT G.*, S.*
FROM GEOGRAPHY G, STORE_INFORMATION S
WHERE G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;

SELECT G.*, S.*
FROM GEOGRAPHY G INNER JOIN STORE_INFORMATION S
ON  G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;

SELECT *
FROM GEOGRAPHY INNER JOIN STORE_INFORMATION 
USING (GEOGRAPHY_ID);

SELECT G.*, S.*
FROM GEOGRAPHY G LEFT JOIN STORE_INFORMATION S
ON  G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;


SELECT G.*, S.*
FROM GEOGRAPHY G RIGHT JOIN STORE_INFORMATION S
ON  G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;


SELECT G.*, S.*
FROM GEOGRAPHY G FULL JOIN STORE_INFORMATION S
ON  G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;

--「總合營業額」、「商店資料個數」、「平均營業額」
--排除「平均營業額」1000(含)以下的商店資料
--排除「商店資料個數」1(含)個以下的商店資料
--依照「平均營業額」由大至小排序

SELECT S.STORE_NAME, SUM(S.SALES), COUNT(S.STORE_ID), AVG(S.SALES) "AVG_SALES"
FROM STORE_INFORMATION S
GROUP BY S.STORE_NAME
HAVING AVG(S.SALES) > 1000
AND COUNT(S.STORE_ID) > 1
ORDER BY "AVG_SALES" DESC;


SELECT G.REGION_NAME, NVL(SUM(S.SALES), 0) "SUM_SALES"
FROM GEOGRAPHY G LEFT JOIN STORE_INFORMATION S
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID
GROUP BY G.REGION_NAME
ORDER BY SUM_SALES DESC;


SELECT G.REGION_NAME, COUNT(DISTINCT S.STORE_NAME) "COUNT_STORE"
FROM GEOGRAPHY G LEFT JOIN STORE_INFORMATION S
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID
GROUP BY G.REGION_NAME
ORDER BY "COUNT_STORE" DESC;