-- 語法所帶來的　"功能效果"
SELECT * FROM STORE_INFORMATION
ORDER BY SALES DESC;

-- 營業額最高的商店
SELECT * FROM STORE_INFORMATION
WHERE SALES = 3000;

SELECT MAX(SALES) FROM STORE_INFORMATION;

-- 子查詢
SELECT * FROM STORE_INFORMATION
WHERE SALES = (
	SELECT MAX(SALES) FROM STORE_INFORMATION
);

-- 子查詢可視為「暫存表」的觀念
SELECT G.*, S.* 
FROM(
	SELECT * FROM STORE_INFORMATION
)S,(
  SELECT * FROM GEOGRAPHY
)G 
WHERE S.GEOGRAPHY_ID = G.GEOGRAPHY_ID;


-- HR DB 資料查詢
-- 查詢每個部門高於平均部門薪資的員工
-- (結果依部門平均薪資降冪排序)

-- STEP1:算出每個部門的「平均部門薪資」
SELECT DEPARTMENT_ID, TRUNCATE(AVG(SALARY), 0) DEP_AVG_SALARY
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;

-- 找出所有大於「平均部門薪資」的員工
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.SALARY, 
	D.DEPARTMENT_NAME,
	AVG_DEP.DEPARTMENT_ID, AVG_DEP.DEP_AVG_SALARY
FROM (
	SELECT DEPARTMENT_ID, TRUNCATE(AVG(SALARY), 0) DEP_AVG_SALARY
	FROM EMPLOYEES
	GROUP BY DEPARTMENT_ID
) AVG_DEP, EMPLOYEES E, DEPARTMENTS D
WHERE AVG_DEP.DEPARTMENT_ID = E.DEPARTMENT_ID
AND D.DEPARTMENT_ID = E.DEPARTMENT_ID
AND E.SALARY > AVG_DEP.DEP_AVG_SALARY
ORDER BY AVG_DEP.DEP_AVG_SALARY DESC;


SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.SALARY, 
	D.DEPARTMENT_NAME,
	AVG_DEP.DEPARTMENT_ID, AVG_DEP.DEP_AVG_SALARY
FROM (
	SELECT DEPARTMENT_ID, TRUNCATE(AVG(SALARY), 0) DEP_AVG_SALARY
	FROM EMPLOYEES
	GROUP BY DEPARTMENT_ID
) AVG_DEP JOIN EMPLOYEES E ON AVG_DEP.DEPARTMENT_ID = E.DEPARTMENT_ID
JOIN DEPARTMENTS D ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
WHERE E.SALARY > AVG_DEP.DEP_AVG_SALARY
ORDER BY AVG_DEP.DEP_AVG_SALARY DESC;






