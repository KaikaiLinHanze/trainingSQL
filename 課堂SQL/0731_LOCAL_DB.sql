-- 語法所帶來的　"功能效果"
SELECT * FROM STORE_INFORMATION
ORDER BY SALES DESC;

-- 營業額最高的商店
SELECT * FROM STORE_INFORMATION
WHERE SALES = 3000;

SELECT MAX(SALES) FROM STORE_INFORMATION;

-- 子查詢
SELECT * FROM STORE_INFORMATION
WHERE SALES = (
	SELECT MAX(SALES) FROM STORE_INFORMATION
);

-- 子查詢可視為「暫存表」的觀念
SELECT G.*, S.* 
FROM(
	SELECT * FROM STORE_INFORMATION
)S,(
  SELECT * FROM GEOGRAPHY
)G 
WHERE S.GEOGRAPHY_ID = G.GEOGRAPHY_ID;

-- CTE(Common Table Expressions)
WITH S AS (
	SELECT * FROM STORE_INFORMATION
),
G AS (
	SELECT * FROM GEOGRAPHY
)
SELECT G.*, S.* 
FROM S,G
WHERE S.GEOGRAPHY_ID = G.GEOGRAPHY_ID;



SELECT G.*, S.* FROM (
   SELECT GEOGRAPHY_ID, REGION_NAME FROM GEOGRAPHY
) G , 
(
   SELECT STORE.GEOGRAPHY_ID, STORE.STORE_NAME
   FROM STORE_INFORMATION STORE, G
   WHERE G.GEOGRAPHY_ID = STORE.GEOGRAPHY_ID
) S
WHERE G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;



WITH G AS (
  SELECT GEOGRAPHY_ID, REGION_NAME FROM GEOGRAPHY
) ,
S AS (
  SELECT G.GEOGRAPHY_ID, G.REGION_NAME, STORE.STORE_NAME 
  FROM STORE_INFORMATION STORE, G
  WHERE G.GEOGRAPHY_ID = STORE.GEOGRAPHY_ID
)
SELECT S.*  FROM S;
--  WHERE G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;



-- HR DB 資料查詢
-- 查詢每個部門高於平均部門薪資的員工
-- (結果依部門平均薪資降冪排序)

-- STEP1:算出每個部門的「平均部門薪資」
SELECT DEPARTMENT_ID, TRUNCATE(AVG(SALARY), 0) DEP_AVG_SALARY
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;

-- 找出所有大於「平均部門薪資」的員工
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.SALARY, 
	D.DEPARTMENT_NAME,
	AVG_DEP.DEPARTMENT_ID, AVG_DEP.DEP_AVG_SALARY
FROM (
	SELECT DEPARTMENT_ID, TRUNCATE(AVG(SALARY), 0) DEP_AVG_SALARY
	FROM EMPLOYEES
	GROUP BY DEPARTMENT_ID
) AVG_DEP, EMPLOYEES E, DEPARTMENTS D
WHERE AVG_DEP.DEPARTMENT_ID = E.DEPARTMENT_ID
AND D.DEPARTMENT_ID = E.DEPARTMENT_ID
AND E.SALARY > AVG_DEP.DEP_AVG_SALARY
ORDER BY AVG_DEP.DEP_AVG_SALARY DESC;

-- MySQL
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.SALARY, 
	D.DEPARTMENT_NAME,
	AVG_DEP.DEPARTMENT_ID, AVG_DEP.DEP_AVG_SALARY
FROM (
	SELECT DEPARTMENT_ID, TRUNCATE(AVG(SALARY), 0) DEP_AVG_SALARY
	FROM EMPLOYEES
	GROUP BY DEPARTMENT_ID
) AVG_DEP JOIN EMPLOYEES E ON AVG_DEP.DEPARTMENT_ID = E.DEPARTMENT_ID
JOIN DEPARTMENTS D ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
WHERE E.SALARY > AVG_DEP.DEP_AVG_SALARY
ORDER BY AVG_DEP.DEP_AVG_SALARY DESC;

-- Oracle、MySQL
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.SALARY, 
	D.DEPARTMENT_NAME,
	AVG_DEP.DEPARTMENT_ID, AVG_DEP.DEP_AVG_SALARY
FROM (
	SELECT DEPARTMENT_ID, FLOOR(AVG(SALARY)) DEP_AVG_SALARY
	FROM EMPLOYEES
	GROUP BY DEPARTMENT_ID
) AVG_DEP JOIN EMPLOYEES E ON AVG_DEP.DEPARTMENT_ID = E.DEPARTMENT_ID
JOIN DEPARTMENTS D ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
WHERE E.SALARY > AVG_DEP.DEP_AVG_SALARY
ORDER BY AVG_DEP.DEP_AVG_SALARY DESC;


WITH AVG_DEP AS (
	SELECT DEPARTMENT_ID, FLOOR(AVG(SALARY)) DEP_AVG_SALARY
	FROM EMPLOYEES
	GROUP BY DEPARTMENT_ID
)
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.SALARY, 
	D.DEPARTMENT_NAME,
	AVG_DEP.DEPARTMENT_ID, AVG_DEP.DEP_AVG_SALARY
FROM AVG_DEP JOIN EMPLOYEES E ON AVG_DEP.DEPARTMENT_ID = E.DEPARTMENT_ID
JOIN DEPARTMENTS D ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
WHERE E.SALARY > AVG_DEP.DEP_AVG_SALARY
ORDER BY AVG_DEP.DEP_AVG_SALARY DESC;



WITH AVG_DEP AS (
-- 平均部門薪資
	SELECT DEPARTMENT_ID, FLOOR(AVG(SALARY)) DEP_AVG_SALARY
	FROM EMPLOYEES
	GROUP BY DEPARTMENT_ID
),
E AS (
	SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.SALARY, 		
		AVG_DEP.DEPARTMENT_ID, AVG_DEP.DEP_AVG_SALARY
	FROM AVG_DEP JOIN EMPLOYEES E ON AVG_DEP.DEPARTMENT_ID = E.DEPARTMENT_ID
    WHERE E.SALARY > AVG_DEP.DEP_AVG_SALARY
)
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.SALARY, 
	D.DEPARTMENT_NAME,
	AVG_DEP.DEPARTMENT_ID, AVG_DEP.DEP_AVG_SALARY
FROM E JOIN DEPARTMENTS D ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
JOIN AVG_DEP ON AVG_DEP.DEPARTMENT_ID = E.DEPARTMENT_ID
ORDER BY AVG_DEP.DEP_AVG_SALARY DESC;



