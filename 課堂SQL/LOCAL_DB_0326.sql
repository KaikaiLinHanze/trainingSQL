-- One to One
SELECT * FROM GOV;
SELECT * FROM STATE;

-- Ont to Many
SELECT * FROM VENDOR;
SELECT * FROM INVENTORY;

-- Many to Many
SELECT * FROM CLASS;
SELECT * FROM STUDENT;
SELECT * FROM classstudent_relation;



-- View
CREATE VIEW REGION_SALES_AVG AS (
	SELECT G.REGION_NAME, FLOOR(IFNULL(AVG(S.SALES),0)) AVG_SALE
	FROM geography G 
	LEFT JOIN store_information S ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID
	GROUP BY G.REGION_NAME
	ORDER BY AVG_SALE DESC
);

SELECT * FROM REGION_SALES_AVG;

-- 加一個欄位
ALTER TABLE STORE_INFORMATION ADD NUM_CUSTOMER NUMERIC;

-- 改變欄位名稱
ALTER TABLE STORE_INFORMATION RENAME COLUMN NUM_CUSTOMER TO NUM_OF_CUSTOMER;

-- 改變欄位的資料種類
ALTER TABLE STORE_INFORMATION MODIFY NUM_OF_CUSTOMER VARCHAR(20);

-- 刪去一個欄位
ALTER TABLE STORE_INFORMATION DROP COLUMN NUM_OF_CUSTOMER;


SELECT * FROM geography;
SELECT * FROM store_information;

-- 1.INSERT 新增資料到資料表中
INSERT INTO store_information (STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID)
VALUE(10, 'Apple Inc', 6000, STR_TO_DATE('2021-08-15 16:07:45', "%Y-%m-%d %T"), 3);

-- "全欄位"值新增可省略欄位名稱
INSERT INTO store_information VALUE (10, 'Apple Inc', 6000, STR_TO_DATE('2021-08-15 16:07:45', "%Y-%m-%d %T"), 3);

-- INSERT資料表的來源可透過SELECT SQL的查詢結果
INSERT INTO store_information_2 (STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID)
SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID
FROM store_information
WHERE SALES > 2000;

-- 2.UPDATE 更改資料表中的資料
UPDATE store_information 
SET STORE_NAME = 'BOSTOM', SALES = 1555
WHERE STORE_ID = 3;

-- 3.DELETE 刪除資料表中的資料
DELETE FROM store_information WHERE STORE_ID = 9;


SELECT * FROM TABLE_A;

INSERT INTO TABLE_A VALUE('A');
INSERT INTO TABLE_A VALUE('B');
INSERT INTO TABLE_A VALUE('C');

-- 如進行資料異動操作後最後須執行交易提交commit的動作資料方可異動成功
COMMIT;

-- ROLLBACK 資料回滾(倒回)
ROLLBACK;
