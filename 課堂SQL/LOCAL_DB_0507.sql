-- SELECT(選取)、FROM(資料來源表格)
SELECT STORE_NAME FROM store_information;

SELECT STORE_ID, STORE_NAME FROM store_information;

SELECT STORE_ID, SALES, STORE_NAME FROM store_information;

SELECT * FROM STORE_INFORMATION;

-- DISTINCT(資料去重覆)
-- 整列資料欄是否重覆為依據
-- 只能下一次而且要在欄位的開頭
SELECT DISTINCT STORE_NAME FROM store_information;
SELECT DISTINCT STORE_ID,  STORE_NAME FROM STORE_INFORMATION;


-- AND且(嚴僅)資料限縮
-- OR或(寬鬆)資料擴展
SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE
FROM store_information
WHERE SALES > 250
AND STORE_DATE > '2018-03-01';


SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE
FROM store_information
WHERE SALES > 2500 
OR STORE_DATE > '2018-05-01';


SELECT * FROM STORE_INFORMATION
WHERE STORE_ID = 1
OR STORE_ID = 2
OR STORE_ID = 3
OR STORE_ID = 4;


SELECT * FROM STORE_INFORMATION
WHERE STORE_ID IN (1,2,3,4);


SELECT * FROM STORE_INFORMATION
WHERE STORE_NAME IN ('Los Angeles', 'Boston');


SELECT * 
FROM STORE_INFORMATION
WHERE SALES >= 700 AND SALES <= 2500;

-- BETWEEN ... AND 則是讓我們可以運用一個範圍 (range) 內 抓出資料庫中的值
SELECT * 
FROM STORE_INFORMATION
WHERE SALES BETWEEN 700 AND 2500;


SELECT * FROM STORE_INFORMATION
WHERE STORE_NAME LIKE 'B%';

SELECT * FROM STORE_INFORMATION
WHERE STORE_NAME LIKE '%s';

SELECT * FROM STORE_INFORMATION
WHERE STORE_NAME LIKE 'L%s';

SELECT * FROM STORE_INFORMATION
WHERE STORE_NAME LIKE '%a%';

-- 1.「且」找出屬於西區的商店
-- 2.「且」營業額大於300(包含300)
-- 3.「且」商店名稱'L'開頭
-- 4.「或」營業日介於2018年3月至4月
SELECT * FROM STORE_INFORMATION 
 WHERE GEOGRAPHY_ID = 2 
 AND SALES >= 300
 AND STORE_NAME LIKE 'L%'
 OR STORE_DATE BETWEEN '2018-03-01' AND '2018-04-30';
 
-- 排序
-- 小往大 (ascending) 預設
-- 大往小(descending)
SELECT STORE_ID,STORE_NAME, SALES 
FROM STORE_INFORMATION
ORDER BY SALES ASC;

-- 主排序欄位 SALES、次排序欄位 STORE_DATE
SELECT STORE_ID,STORE_NAME, SALES, STORE_DATE
FROM STORE_INFORMATION
ORDER BY SALES DESC, STORE_DATE ASC;

-- SUM:13,250、COUNT:9、AVG:1,472、MOD(分子,分母)取餘
SELECT SUM(SALES), COUNT(STORE_ID), AVG(SALES), 
	MOD(SUM(SALES), COUNT(STORE_ID)),
	MAX(SALES), MIN(SALES)
FROM STORE_INFORMATION;


-- CEIL(x)：返回大於或等於x的最大整數值(無條件進位)
-- FLOOR(x)：返回小於或等於x的最小整數值(無條件捨去)
-- ROUND(x ,[y])：返回(四捨五入)到小數點右邊y位的x值,y預設值為0
SELECT CEIL(45.1), FLOOR(45.9), ROUND(45.15, 1);

-- 找出空值的數量
SELECT COUNT(STORE_ID) FROM STORE_INFORMATION
WHERE GEOGRAPHY_ID IS NULL;

-- 找出非空值的數量
SELECT COUNT(STORE_ID) FROM STORE_INFORMATION
WHERE GEOGRAPHY_ID IS NOT NULL;


-- COUNT 和 DISTINCT 經常被合起來使用，目的是找出表格中有多少筆不同的資料 
SELECT COUNT(DISTINCT STORE_NAME) FROM STORE_INFORMATION;


SELECT STORE_ID, STORE_NAME, SALES
FROM STORE_INFORMATION
ORDER BY STORE_NAME;

-- 資料分群、合併
-- 各別商店(總和營業額、平均營業額)
SELECT STORE_NAME, SUM(SALES), COUNT(STORE_ID), AVG(SALES),
	MAX(SALES), MIN(SALES)
FROM STORE_INFORMATION
GROUP BY STORE_NAME;

-- GROUP BY多欄位分群，以一整列欄位資料相同為分群依據
SELECT STORE_ID, STORE_NAME 
FROM STORE_INFORMATION
GROUP BY STORE_ID, STORE_NAME;

-- 非群組欄位必須指定資料欄位的「合併方式」
-- Oracle : not a GROUP BY expression
-- MySQL : SQL語法執行較為寬鬆
SELECT STORE_NAME, SALES
FROM STORE_INFORMATION
GROUP BY STORE_NAME;

-- 查尋資料未群組合併前的資料清單
SELECT STORE_NAME, COUNT(STORE_ID),
	GROUP_CONCAT(SALES ORDER BY SALES DESC SEPARATOR '/')
FROM STORE_INFORMATION
GROUP BY STORE_NAME;



