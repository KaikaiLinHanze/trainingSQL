-- 各別商店的"加總營業額"、"平均營業額"
-- GROUP BY(群組、合併)
-- 非群組的欄位，必須指定合併方式
SELECT STORE_NAME, SUM(SALES), COUNT(STORE_ID), FLOOR((SALES)),
	MAX(SALES), MIN(SALES)
FROM STORE_INFORMATION
GROUP BY STORE_NAME;

-- 群組清單
-- 查詢GROUP BY合併前的欄位資料結果
-- MySQL GROUP_CONCAT
SELECT STORE_NAME, COUNT(STORE_ID),
	GROUP_CONCAT(SALES ORDER BY SALES DESC SEPARATOR '/')
FROM STORE_INFORMATION
GROUP BY STORE_NAME;

-- Oracle LISTAGG WITHIN GROUP
SELECT STORE_NAME, COUNT(STORE_ID),
  LISTAGG(SALES, '/') WITHIN GROUP (ORDER BY SALES DESC)
FROM STORE_INFORMATION
GROUP BY STORE_NAME;

-- 查詢各別商店總合營額大於3000
-- 函數產生的值來設定條件查尋
-- SELECT -> FROM -> WHERE -> GROUP BY -> HAVING
SELECT STORE_NAME, SUM(SALES)
FROM STORE_INFORMATION
-- WHERE SUM(SALES) > 300  
GROUP BY STORE_NAME
HAVING SUM(SALES) > 3000;


-- alias(別名)
-- 1.欄位別名("雙引號")
-- 2.AS 語法可省略
-- 3.雙引號可省略(別名中間不能有空白)
SELECT STORE_NAME, COUNT(STORE_ID) AS "STORE_COUNT",
	GROUP_CONCAT(SALES ORDER BY SALES DESC SEPARATOR '/') AS "LIST STORE"
FROM STORE_INFORMATION
GROUP BY STORE_NAME;


SELECT STORE_NAME, SUM(SALES) "SUM_SALES"
FROM STORE_INFORMATION
-- WHERE SUM(SALES) > 300  
GROUP BY STORE_NAME
HAVING SUM_SALES > 0
ORDER BY SUM_SALES DESC;

-- 表格別名
-- SELECT STORE_ID, STORE_NAME, SALES 
SELECT S.STORE_NAME
FROM STORE_INFORMATION S;

-- '1', 'East'
-- '2', 'West'
-- '3', 'North'

-- 3筆
SELECT * FROM GEOGRAPHY;
-- 9筆
SELECT * FROM STORE_INFORMATION;

-- 27筆
-- TABLE JOIN 表格連接查詢
SELECT G.*, S.* 
FROM GEOGRAPHY G, STORE_INFORMATION S
WHERE G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;

-- 內部連接 (INNER JOIN ...ON)
-- INNER 可省略寫
SELECT G.*, S.* 
FROM GEOGRAPHY G JOIN STORE_INFORMATION S
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID
ORDER BY STORE_ID;

-- 外部連接(RIGHT OUTER JOIN、LEFT OUTER JOIN)
-- 查詢全部的商店，不論是否有所屬區域
-- OUTER 可省略寫
SELECT G.*, S.* 
FROM GEOGRAPHY G RIGHT JOIN STORE_INFORMATION S
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID
ORDER BY STORE_ID;

-- 查詢全部的區域，不論該區域是否有商店
SELECT G.*, S.* 
FROM GEOGRAPHY G LEFT OUTER JOIN STORE_INFORMATION S
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID
ORDER BY STORE_ID;


-- 計算和統計「個別商店」的以下三項資料：
-- 「總合營業額」、「商店資料個數」、「平均營業額」
-- 搜尋或排除條件如下：
-- 排除「平均營業額」1000(含)以下的商店資料
-- 排除「商店資料個數」1(含)個以下的商店資料
-- 依照「平均營業額」由大至小排序
-- PS:使用別名語法簡化「表格名稱」及查詢結果「欄位名稱」
SELECT STORE_NAME, SUM(SALES) "SUM_SALES",  COUNT(STORE_ID) AS "COUNT_STORE", FLOOR(AVG(SALES)) AS "AVG_SALES"
FROM STORE_INFORMATION
GROUP BY STORE_NAME
HAVING AVG_SALES > 1000 AND COUNT_STORE > 1
ORDER BY AVG_SALES DESC;


-- 查詢各區域的營業額總計
-- 資料結果依營業額總計由大到小排序
-- (不論該區域底下是否有所屬商店)
SELECT G.region_name REGION_NAME, IFNULL(SUM(S.Sales), 0) SUM_SALES 
FROM Geography G LEFT JOIN Store_Information S 
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID
GROUP BY REGION_NAME
ORDER BY SUM_SALES DESC;


-- 查詢各區域的商店個數
-- 資料結果依區域的商店個數由大至小排序
-- (依據商店名稱,不包含重覆的商店)
-- (不論該區域底下是否有所屬商店)
SELECT G.REGION_NAME, COUNT(DISTINCT(S.STORE_NAME)) STORE_COUNT
FROM GEOGRAPHY G LEFT JOIN STORE_INFORMATION S
ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID
GROUP BY G.GEOGRAPHY_ID
ORDER BY STORE_COUNT DESC;
















