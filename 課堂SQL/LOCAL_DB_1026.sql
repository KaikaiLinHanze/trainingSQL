-- 欄合併
SELECT CONCAT(STORE_ID, '-', STORE_NAME) "STORE_ID_NAME"
FROM STORE_INFORMATION;

-- Oracle的CONCAT()只允許兩個參數；換言之，一次只能將兩個字串串連起來。不過，在Oracle中，我們可以用'||'來一次串連多個字串
SELECT STORE_ID || '-'  || STORE_NAME "STORE_ID_NAME"
FROM STORE_INFORMATION;

-- 欄位值的部份子字串
SELECT STORE_NAME, SUBSTR(STORE_NAME, 3), SUBSTR(STORE_NAME, 2, 4)
FROM STORE_INFORMATION;


-- TRIM([[位置] [要移除的字串] FROM ] 字串)
-- [位置] 的可能值為 LEADING (起頭), TRAILING (結尾), or BOTH (起頭及結尾)
SELECT STORE_ID, STORE_NAME,
    TRIM(LEADING 'Bos' FROM STORE_NAME),
    TRIM(TRAILING 's' FROM STORE_NAME),
    TRIM(BOTH 'L' FROM STORE_NAME)
FROM STORE_INFORMATION;

-- 資料新增 INSERT INTO
INSERT INTO STORE_INFORMATION (STORE_ID,STORE_NAME,SALES,STORE_DATE,GEOGRAPHY_ID) 
VALUES (10, 'Apple', 5500, '2021-10-26 20:36:00', 3);

-- 資料更新 UPDATE
UPDATE STORE_INFORMATION SET STORE_NAME = 'Google', SALES = 6000
WHERE STORE_ID = 10;

-- 資料刪除 DELETE
DELETE FROM STORE_INFORMATION WHERE STORE_ID = 10;

-- 交易提交
COMMIT;

-- 交易取消(資料回滾(倒回))
ROLLBACK;

-- 查尋營業額"最高"的商店
-- 1.最高的營業額?
-- 2.商店資料?

SELECT * FROM STORE_INFORMATION
WHERE SALES = 3000;

SELECT MAX(SALES) FROM STORE_INFORMATION;

-- 簡單子查詢(Simple Subquery)
-- 外查詢
SELECT * FROM STORE_INFORMATION
WHERE SALES = (
	-- 子查詢(內查詢)
	SELECT MAX(SALES) FROM STORE_INFORMATION
);

-- 東西區營業額加總
-- 『相關子查詢』(Correlated Subquery)
SELECT SUM(SALES) FROM STORE_INFORMATION A
WHERE A.GEOGRAPHY_ID IN (
	SELECT B.GEOGRAPHY_ID FROM GEOGRAPHY B WHERE A.GEOGRAPHY_ID = B.GEOGRAPHY_ID
);

-- 簡單子查詢(Simple Subquery)
SELECT  *  FROM (
   SELECT GEOGRAPHY_ID, REGION_NAME FROM GEOGRAPHY
) G , 
(
   SELECT GEOGRAPHY_ID, STORE_NAME FROM STORE_INFORMATION
) S
WHERE G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;


-- 『相關子查詢』(Correlated Subquery)
WITH G AS (
  SELECT GEOGRAPHY_ID, REGION_NAME FROM GEOGRAPHY
)  ,
S AS (
  SELECT GEOGRAPHY_ID, STORE_NAME FROM STORE_INFORMATION
)
SELECT  *  FROM G, S 
WHERE G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;


-- 查詢與查詢之間可以相互使用欄位做關聯式查詢
WITH G AS (
  SELECT GEOGRAPHY_ID, REGION_NAME FROM GEOGRAPHY
) ,
S AS (
  SELECT STORE.GEOGRAPHY_ID, STORE.STORE_NAME 
  FROM STORE_INFORMATION STORE, G
  WHERE G.GEOGRAPHY_ID = STORE.GEOGRAPHY_ID
)
SELECT  G.*, S.*  FROM G, S
WHERE G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;



















